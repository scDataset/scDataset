name: Build and Deploy Sphinx Docs

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install sphinx sphinx-book-theme sphinx-autodoc-typehints
        pip install -e .

    - name: Build docs
      run: |
        sphinx-build -b html docs/source docs/build/html
        touch docs/build/html/.nojekyll

    - name: Determine version and deploy location
      id: version
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          echo "destination=latest" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "destination=$VERSION" >> $GITHUB_OUTPUT
          echo "is_release=true" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.DOCS_DEPLOY_TOKEN }}
        external_repository: scdataset/scdataset.github.io
        publish_branch: main
        publish_dir: docs/build/html
        destination_dir: ${{ steps.version.outputs.destination }}
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        keep_files: true

    - name: Update stable symlink and create version structure
      if: steps.version.outputs.is_release == 'true'
      run: |
        # Clone the docs repository to update stable symlink
        git clone https://x-access-token:${{ secrets.DOCS_DEPLOY_TOKEN }}@github.com/scdataset/scdataset.github.io.git temp-docs
        cd temp-docs
        
        # Create/update stable symlink to point to this version
        VERSION=${GITHUB_REF#refs/tags/v}
        rm -rf stable
        ln -sf $VERSION stable
        
        # Create versions.json for version switcher
        cat > versions.json << 'EOF'
        [
          {
            "version": "stable",
            "title": "stable"
          },
          {
            "version": "latest", 
            "title": "latest"
          }
        ]
        EOF
        
        # Create root index.html that redirects to stable
        cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>Redirecting to stable documentation</title>
            <meta http-equiv="refresh" content="0; url=./stable/">
            <link rel="canonical" href="./stable/">
        </head>
        <body>
            <p>If you are not redirected automatically, follow this <a href="./stable/">link to stable documentation</a>.</p>
        </body>
        </html>
        EOF
        
        # Commit the changes
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Update stable symlink to $VERSION" || true
        git push
